"""
Обработчики базовых команд бота (/start, /help)
"""

import logging
from aiogram import Router, F
from aiogram.filters import Command, StateFilter
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from telegram_doc_bot.utils.keyboards import get_main_keyboard
from telegram_doc_bot.config import Config

logger = logging.getLogger(__name__)

# Создание роутера для базовых команд
router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """
    Обработчик команды /start
    
    Args:
        message: Сообщение пользователя
        state: Состояние FSM
    """
    # Очистка состояния при старте
    await state.clear()
    
    user_name = message.from_user.first_name or "Пользователь"
    
    welcome_text = (
        f"👋 <b>Привет, {user_name}!</b>\n\n"
        f"🤖 Я умный бот для автоматической генерации документов с помощью нейросети Google Gemini.\n\n"
        f"✨ <b>Мои возможности:</b>\n"
        f"📝 Создание документов любого типа\n"
        f"✏️ Интеллектуальное редактирование текста\n"
        f"🌍 Поддержка 6 языков\n"
        f"📊 Статистика и история\n"
        f"⭐ Избранные шаблоны\n"
        f"🎨 Настройка стиля и форматирования\n\n"
        f"🎯 <b>Начало работы:</b>\n"
        f"1️⃣ Нажмите \"🔑 Мой API ключ\"\n"
        f"2️⃣ Добавьте бесплатный ключ Gemini\n"
        f"3️⃣ Начните создавать документы!\n\n"
        f"💡 <b>Это займёт всего 2 минуты</b>\n\n"
        f"❓ Нужна помощь? Нажмите \"❓ Помощь\""
    )
    
    await message.answer(
        welcome_text,
        reply_markup=get_main_keyboard()
    )
    
    logger.info(f"Пользователь {message.from_user.id} ({user_name}) запустил бота")


@router.message(Command("help"))
@router.message(F.text == "❓ Помощь")
async def cmd_help(message: Message):
    """
    Обработчик команды /help и кнопки "Помощь"
    
    Args:
        message: Сообщение пользователя
    """
    help_text = (
        "📖 <b>Руководство по использованию бота</b>\n\n"
        
        "━━━━━━━━━━━━━━━━━━━━━━\n"
        "🎯 <b>БЫСТРЫЙ СТАРТ</b>\n"
        "━━━━━━━━━━━━━━━━━━━━━━\n\n"
        
        "1️⃣ Настройте API ключ через \"🔑 Мой API ключ\"\n"
        "2️⃣ Выберите \"📝 Создать документ\"\n"
        "3️⃣ Опишите, что вам нужно\n"
        "4️⃣ Получите готовый документ!\n\n"
        
        "━━━━━━━━━━━━━━━━━━━━━━\n"
        "📝 <b>ТИПЫ ДОКУМЕНТОВ</b>\n"
        "━━━━━━━━━━━━━━━━━━━━━━\n\n"
        
        "📜 <b>Договор</b> - юридические документы\n"
        "📋 <b>Заявление</b> - официальные заявления\n"
        "👔 <b>Резюме</b> - профессиональное CV\n"
        "✉️ <b>Деловое письмо</b> - корреспонденция\n"
        "📊 <b>Отчёт</b> - аналитика и отчёты\n"
        "🧾 <b>Счёт</b> - счета на оплату\n"
        "💼 <b>КП</b> - коммерческие предложения\n"
        "📝 <b>Протокол</b> - протоколы встреч\n"
        "📖 <b>Инструкция</b> - руководства\n\n"
        
        "━━━━━━━━━━━━━━━━━━━━━━\n"
        "✨ <b>ВОЗМОЖНОСТИ</b>\n"
        "━━━━━━━━━━━━━━━━━━━━━━\n\n"
        
        "✏️ <b>Редактирование</b> - изменяйте документы\n"
        "👁️ <b>Предпросмотр</b> - просмотр перед сохранением\n"
        "⭐ <b>Избранное</b> - сохраняйте лучшие документы\n"
        "📚 <b>История</b> - доступ к прошлым документам\n"
        "📊 <b>Статистика</b> - отслеживайте прогресс\n"
        "🌍 <b>6 языков</b> - создавайте на разных языках\n"
        "🎨 <b>Стили</b> - выбирайте тон документа\n\n"
        
        "━━━━━━━━━━━━━━━━━━━━━━\n"
        "⚙️ <b>КОМАНДЫ</b>\n"
        "━━━━━━━━━━━━━━━━━━━━━━\n\n"
        
        "/start - Запустить бота\n"
        "/help - Показать справку\n"
        "/apikey - Управление API ключом\n"
        "/generate - Создать документ\n"
        "/cancel - Отменить операцию\n\n"
        
        "━━━━━━━━━━━━━━━━━━━━━━\n"
        "💡 <b>СОВЕТЫ</b>\n"
        "━━━━━━━━━━━━━━━━━━━━━━\n\n"
        
        "▫️ Будьте конкретны в описании\n"
        "▫️ Указывайте все важные детали\n"
        "▫️ Используйте настройки для лучших результатов\n"
        f"▫️ Максимум {Config.MAX_REQUEST_LENGTH} символов на запрос\n\n"
        
        "🔗 <b>Получить API ключ:</b>\n"
        "https://aistudio.google.com/app/apikey\n\n"
        
        "❓ Есть вопросы? Напишите в поддержку!"
    )
    
    await message.answer(
        help_text,
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@router.message(F.text == "ℹ️ О боте")
async def cmd_about(message: Message):
    """
    Обработчик кнопки "О боте"
    
    Args:
        message: Сообщение пользователя
    """
    about_text = (
        "🤖 <b>О боте для генерации документов</b>\n\n"
        
        "━━━━━━━━━━━━━━━━━━━━━━\n"
        "🚀 <b>ТЕХНОЛОГИИ</b>\n"
        "━━━━━━━━━━━━━━━━━━━━━━\n\n"
        
        "🧠 <b>Google Gemini AI</b>\n"
        "   Генерация контента нового поколения\n\n"
        
        "📘 <b>Python-docx</b>\n"
        "   Профессиональные Word документы\n\n"
        
        "📕 <b>ReportLab</b>\n"
        "   Качественные PDF файлы\n\n"
        
        "⚡ <b>Aiogram 3.x</b>\n"
        "   Быстрая работа с Telegram\n\n"
        
        "━━━━━━━━━━━━━━━━━━━━━━\n"
        "✨ <b>ПРЕИМУЩЕСТВА</b>\n"
        "━━━━━━━━━━━━━━━━━━━━━━\n\n"
        
        "⚡ Мгновенная генерация за 10-30 сек\n"
        "🎯 Высокое качество текста\n"
        "✏️ Умное редактирование\n"
        "🌍 Поддержка 6 языков\n"
        "🔒 Безопасное хранение данных\n"
        "📊 Детальная статистика\n"
        "💾 История всех документов\n"
        "🎨 Гибкие настройки\n\n"
        
        "━━━━━━━━━━━━━━━━━━━━━━\n"
        "📈 <b>СТАТИСТИКА</b>\n"
        "━━━━━━━━━━━━━━━━━━━━━━\n\n"
        
        "🎨 10+ типов документов\n"
        "🌍 6 языков интерфейса\n"
        "⚙️ 4 стиля оформления\n"
        "📊 2 формата экспорта\n\n"
        
        "━━━━━━━━━━━━━━━━━━━━━━\n\n"
        
        "📦 <b>Версия:</b> 2.0.0\n"
        "📅 <b>Обновлено:</b> 2024\n\n"
        
        "Разработано с ❤️ для автоматизации работы\n\n"
        
        "💬 <b>Обратная связь:</b>\n"
        "Ваши идеи помогут сделать бота лучше!"
    )
    
    await message.answer(
        about_text,
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )
